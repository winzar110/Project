//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Industry
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TruckingIndustryEntities : DbContext
    {
        public TruckingIndustryEntities()
            : base("name=TruckingIndustryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Весовая_категория> Весовая_категория { get; set; }
        public virtual DbSet<Клиенты> Клиенты { get; set; }
        public virtual DbSet<Посылки> Посылки { get; set; }
        public virtual DbSet<Тарифы> Тарифы { get; set; }
        public virtual DbSet<Шаблоны> Шаблоны { get; set; }
    
        public virtual ObjectResult<Klienty_Select_Result> Klienty_Select(Nullable<int> iD, string fIO, string mail, string login, string password, string adres, Nullable<int> nubmer)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("adres", adres) :
                new ObjectParameter("adres", typeof(string));
    
            var nubmerParameter = nubmer.HasValue ?
                new ObjectParameter("nubmer", nubmer) :
                new ObjectParameter("nubmer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Klienty_Select_Result>("Klienty_Select", iDParameter, fIOParameter, mailParameter, loginParameter, passwordParameter, adresParameter, nubmerParameter);
        }
    
        public virtual ObjectResult<shablon_Select_Result> shablon_Select(Nullable<int> iD, string nach, string konech, Nullable<double> ves, Nullable<double> objem, Nullable<double> gabarity)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nachParameter = nach != null ?
                new ObjectParameter("nach", nach) :
                new ObjectParameter("nach", typeof(string));
    
            var konechParameter = konech != null ?
                new ObjectParameter("konech", konech) :
                new ObjectParameter("konech", typeof(string));
    
            var vesParameter = ves.HasValue ?
                new ObjectParameter("ves", ves) :
                new ObjectParameter("ves", typeof(double));
    
            var objemParameter = objem.HasValue ?
                new ObjectParameter("objem", objem) :
                new ObjectParameter("objem", typeof(double));
    
            var gabarityParameter = gabarity.HasValue ?
                new ObjectParameter("gabarity", gabarity) :
                new ObjectParameter("gabarity", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<shablon_Select_Result>("shablon_Select", iDParameter, nachParameter, konechParameter, vesParameter, objemParameter, gabarityParameter);
        }
    
        public virtual int zakazy_Select(Nullable<int> iD, string klient, string kolvo, Nullable<double> summa)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var klientParameter = klient != null ?
                new ObjectParameter("klient", klient) :
                new ObjectParameter("klient", typeof(string));
    
            var kolvoParameter = kolvo != null ?
                new ObjectParameter("kolvo", kolvo) :
                new ObjectParameter("kolvo", typeof(string));
    
            var summaParameter = summa.HasValue ?
                new ObjectParameter("summa", summa) :
                new ObjectParameter("summa", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("zakazy_Select", iDParameter, klientParameter, kolvoParameter, summaParameter);
        }
    }
}
