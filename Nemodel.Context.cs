//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Industry
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TruckingIndustryEntities8 : DbContext
    {
        public TruckingIndustryEntities8()
            : base("name=TruckingIndustryEntities8")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clients> Clients { get; set; }
        public virtual DbSet<package> package { get; set; }
        public virtual DbSet<Tariff> Tariff { get; set; }
        public virtual DbSet<Templates> Templates { get; set; }
        public virtual DbSet<Weight_category> Weight_category { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Cat_Select(Nullable<int> ves)
        {
            var vesParameter = ves.HasValue ?
                new ObjectParameter("ves", ves) :
                new ObjectParameter("ves", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cat_Select", vesParameter);
        }
    
        public virtual int klienty_Ins(string fio, string mail, string login, string pas, string adres, Nullable<int> number)
        {
            var fioParameter = fio != null ?
                new ObjectParameter("fio", fio) :
                new ObjectParameter("fio", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var pasParameter = pas != null ?
                new ObjectParameter("pas", pas) :
                new ObjectParameter("pas", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("adres", adres) :
                new ObjectParameter("adres", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("klienty_Ins", fioParameter, mailParameter, loginParameter, pasParameter, adresParameter, numberParameter);
        }
    
        public virtual int Klienty_Select(Nullable<int> iD, string fIO, string mail, string login, string password, string adres, Nullable<int> nubmer)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("adres", adres) :
                new ObjectParameter("adres", typeof(string));
    
            var nubmerParameter = nubmer.HasValue ?
                new ObjectParameter("nubmer", nubmer) :
                new ObjectParameter("nubmer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Klienty_Select", iDParameter, fIOParameter, mailParameter, loginParameter, passwordParameter, adresParameter, nubmerParameter);
        }
    
        public virtual ObjectResult<pocylki_Result> pocylki(string login)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pocylki_Result>("pocylki", loginParameter);
        }
    
        public virtual int pocylki_Ins(string id_kl, string nach, Nullable<int> konch, Nullable<int> ves, Nullable<double> objem, Nullable<double> shirina, Nullable<double> visota, Nullable<double> dlina)
        {
            var id_klParameter = id_kl != null ?
                new ObjectParameter("id_kl", id_kl) :
                new ObjectParameter("id_kl", typeof(string));
    
            var nachParameter = nach != null ?
                new ObjectParameter("nach", nach) :
                new ObjectParameter("nach", typeof(string));
    
            var konchParameter = konch.HasValue ?
                new ObjectParameter("konch", konch) :
                new ObjectParameter("konch", typeof(int));
    
            var vesParameter = ves.HasValue ?
                new ObjectParameter("ves", ves) :
                new ObjectParameter("ves", typeof(int));
    
            var objemParameter = objem.HasValue ?
                new ObjectParameter("objem", objem) :
                new ObjectParameter("objem", typeof(double));
    
            var shirinaParameter = shirina.HasValue ?
                new ObjectParameter("shirina", shirina) :
                new ObjectParameter("shirina", typeof(double));
    
            var visotaParameter = visota.HasValue ?
                new ObjectParameter("visota", visota) :
                new ObjectParameter("visota", typeof(double));
    
            var dlinaParameter = dlina.HasValue ?
                new ObjectParameter("dlina", dlina) :
                new ObjectParameter("dlina", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pocylki_Ins", id_klParameter, nachParameter, konchParameter, vesParameter, objemParameter, shirinaParameter, visotaParameter, dlinaParameter);
        }
    
        public virtual ObjectResult<string> SELECT_LP(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SELECT_LP", loginParameter, passwordParameter);
        }
    
        public virtual int shablon_Ins(string id_kl, string nach, string konch, Nullable<double> ves, Nullable<double> objem, Nullable<double> gabarity)
        {
            var id_klParameter = id_kl != null ?
                new ObjectParameter("id_kl", id_kl) :
                new ObjectParameter("id_kl", typeof(string));
    
            var nachParameter = nach != null ?
                new ObjectParameter("nach", nach) :
                new ObjectParameter("nach", typeof(string));
    
            var konchParameter = konch != null ?
                new ObjectParameter("konch", konch) :
                new ObjectParameter("konch", typeof(string));
    
            var vesParameter = ves.HasValue ?
                new ObjectParameter("ves", ves) :
                new ObjectParameter("ves", typeof(double));
    
            var objemParameter = objem.HasValue ?
                new ObjectParameter("objem", objem) :
                new ObjectParameter("objem", typeof(double));
    
            var gabarityParameter = gabarity.HasValue ?
                new ObjectParameter("gabarity", gabarity) :
                new ObjectParameter("gabarity", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("shablon_Ins", id_klParameter, nachParameter, konchParameter, vesParameter, objemParameter, gabarityParameter);
        }
    
        public virtual ObjectResult<shablon_Select_Result> shablon_Select(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<shablon_Select_Result>("shablon_Select", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> TARIF_SELECT(string gor)
        {
            var gorParameter = gor != null ?
                new ObjectParameter("gor", gor) :
                new ObjectParameter("gor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("TARIF_SELECT", gorParameter);
        }
    
        public virtual int zakazy_Select(Nullable<int> iD, string klient, string kolvo, Nullable<double> summa)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var klientParameter = klient != null ?
                new ObjectParameter("klient", klient) :
                new ObjectParameter("klient", typeof(string));
    
            var kolvoParameter = kolvo != null ?
                new ObjectParameter("kolvo", kolvo) :
                new ObjectParameter("kolvo", typeof(string));
    
            var summaParameter = summa.HasValue ?
                new ObjectParameter("summa", summa) :
                new ObjectParameter("summa", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("zakazy_Select", iDParameter, klientParameter, kolvoParameter, summaParameter);
        }
    }
}
